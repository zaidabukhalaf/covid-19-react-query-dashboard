{"version":3,"sources":["components/table.js","components/country.js","queries.js","api/all-api.js","components/state-cases.js","components/details.js","components/info-box.js","components/global-data-container.js","components/header.js","App.js","index.js"],"names":["Table","columns","role","Object","keys","map","key","i","Styles","styled","div","Country","countryName","console","log","countryInfo","className","src","flag","alt","country","iso2","fetchDataCorona","param","a","axios","get","data","getAllData","getAllStatus","StateCases","setCountryName","useState","search","setSearch","useQuery","status","error","message","type","value","onChange","e","target","placeholder","length","d","onClick","cases","displayType","thousandSeparator","toLowerCase","includes","Details","InfoBox","textWhite","text","GlobalData","active","recovered","deaths","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA+BeA,G,MA3BD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACE,2BAAOC,KAAK,SACV,+BACE,wBAAIA,KAAK,OACP,oCACA,yCAGJ,+BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAUC,EAAKC,GACvC,MAAY,gBAARD,GAAiC,YAARA,GAA6B,YAARA,OAChD,EAGE,wBAAIA,IAAKC,GACP,4BAAKD,GACL,4BAAKL,EAAQK,Y,4uBCjB7B,IAAME,EAASC,IAAOC,IAAV,KAgEGC,EAxBC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEjB,OADAC,QAAQC,IAAIF,GACmB,MAA3BA,EAAYG,YAEZ,yBAAKC,UAAU,WACb,wBAAIA,UAAU,cAAd,6BADF,KAMF,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKC,IAAKL,EAAYG,YAAYG,KAAMC,IAAI,UAE9C,wBAAIH,UAAU,uCACXJ,EAAYQ,QADf,KAC0BR,EAAYG,YAAYM,KADlD,KAGA,kBAACb,EAAD,KACE,kBAAC,EAAD,CAAOP,QAASW,O,iDC5DXU,EAAe,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACNC,IAAMC,IAAN,yCAA4CH,IADtC,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDCCtBC,EAAa,WACjB,OAAON,EAAgB,QAGnBO,EAAe,WACnB,OAAOP,EAAgB,c,0BC+EVQ,EAjFI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EACbC,mBAAS,IADI,mBAClCC,EADkC,KAC1BC,EAD0B,ODUlCC,YAAS,SAAUN,GCRlBO,EAFiC,EAEjCA,OAAQT,EAFyB,EAEzBA,KAAMU,EAFmB,EAEnBA,MAEtB,MAAe,YAAXD,EACK,yCAGM,UAAXA,EAEA,2BACE,wCAAcC,EAAMC,UAMxB,yBAAKtB,UAAU,gBACb,uBAAGA,UAAU,uCAAb,+BAGA,kBAAC,IAAD,KACE,yBAAKA,UAAU,eACb,2BACEuB,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAUQ,EAAEC,OAAOH,QACpCI,YAAY,uBAEd,kBAAC,IAAD,KACqB,IAAlBX,EAAOY,OACJlB,EAAKtB,KAAI,SAACyC,EAAGvC,GAAJ,OACP,yBACED,IAAKC,EACLS,UAAU,eACV+B,QAAS,kBAAMhB,EAAee,KAE9B,0BAAM9B,UAAU,oBACd,kBAAC,IAAD,CACEwB,MAAOM,EAAEE,MACTC,YAAY,OACZC,mBAAmB,KAGvB,0BAAMlC,UAAU,mBAAmB8B,EAAE1B,aAGzCO,EAAKtB,KAAI,SAACyC,EAAGvC,GACX,GAAIuC,EAAE1B,QAAQ+B,cAAcC,SAASnB,EAAOkB,eAC1C,OACE,yBACE7C,IAAKC,EACLS,UAAU,eACV+B,QAAS,kBAAMhB,EAAee,KAE9B,0BAAM9B,UAAU,oBACd,kBAAC,IAAD,CACEwB,MAAOM,EAAEE,MACTC,YAAY,OACZC,mBAAmB,KAGvB,0BAAMlC,UAAU,mBAAmB8B,EAAE1B,cAMnD,kBAAC,IAAD,KACE,+CAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,kBACA,kBAAC,IAAD,uBChEKiC,EAXC,WAAO,IAAD,EACkBrB,mBAAS,IAD3B,mBACbpB,EADa,KACAmB,EADA,KAEpB,OACE,yBAAKf,UAAU,WACb,kBAAC,EAAD,CAAYe,eAAgBA,IAE5B,kBAAC,EAAD,CAASnB,YAAaA,MCOb0C,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC5B,OACE,yBAAKxC,UAAU,YACb,uBAAGA,UAAU,YACX,kBAAC,IAAD,CACEwB,MAAOgB,EACPP,YAAY,OACZC,mBAAmB,KAGvB,uBAAGlC,UAAU,cAAcuC,KCiBlBE,EA1BI,WAAO,IAAD,EJQhBtB,YAAS,MAAOP,GIPfQ,EADe,EACfA,OAAQT,EADO,EACPA,KAAMU,EADC,EACDA,MACtB,MAAe,YAAXD,EACK,yCAGM,UAAXA,EAEA,2BACE,wCAAcC,EAAMC,WAK1BzB,QAAQC,IAAIa,GAGV,oCACE,kBAAC,EAAD,CAAS6B,KAAM7B,EAAKqB,MAAOO,UAAU,UACrC,kBAAC,EAAD,CAASC,KAAM7B,EAAK+B,OAAQH,UAAU,WACtC,kBAAC,EAAD,CAASC,KAAM7B,EAAKgC,UAAWJ,UAAU,cACzC,kBAAC,EAAD,CAASC,KAAM7B,EAAKiC,OAAQL,UAAU,cCf7BM,EARA,WACb,OACE,yBAAK7C,UAAU,UACb,yBAAKA,UAAU,aAAf,kBCgBS8C,MAdf,WACE,OACE,yBAAK9C,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,S,QCTR+C,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.99b9e90e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { useTable } from \"react-table\";\n\nconst Table = ({ columns }) => {\n  return (\n    <table role=\"table\">\n      <thead>\n        <tr role=\"row\">\n          <th>Info</th>\n          <th>Numbers</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.keys(columns).map(function (key, i) {\n          if (key === \"countryInfo\" || key === \"country\" || key === \"updated\") {\n            return;\n          } else {\n            return (\n              <tr key={i}>\n                <td>{key}</td>\n                <td>{columns[key]}</td>\n              </tr>\n            );\n          }\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Table from \"./table\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n  max-height: 490px;\n  overflow-y: scroll;\n  table {\n    border-spacing: 0;\n    border: 2px solid #aaa;\n    width: 100%;\n    color: #fff;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    thead th {\n      position: sticky;\n      position: -webkit-sticky;\n      top: -17px;\n      z-index: 10;\n      background-color: #333;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 2px solid #aaa;\n      border-right: 2px solid #aaa;\n      border-top: 2px solid #aaa;\n      width: 50%;\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst Country = ({ countryName }) => {\n  console.log(countryName);\n  if (countryName.countryInfo == null) {\n    return (\n      <div className=\"country\">\n        <h1 className=\"text-white\">Please Select One Country</h1>;\n      </div>\n    );\n  }\n  return (\n    <div className=\"country\">\n      <div className=\"flag\">\n        <img src={countryName.countryInfo.flag} alt=\"flag\" />\n      </div>\n      <h1 className=\"text-center text-white country-name\">\n        {countryName.country} ({countryName.countryInfo.iso2})\n      </h1>\n      <Styles>\n        <Table columns={countryName} />\n      </Styles>\n    </div>\n  );\n};\n\nexport default Country;\n","import axios from \"axios\";\n\nexport const fetchDataCorona = async (param) => {\n  const { data } = await axios.get(`https://disease.sh/v3/covid-19/${param}`);\n  return data;\n};\n","import { useQuery } from \"react-query\";\nimport { fetchDataCorona } from \"../queries\";\n\nconst getAllData = () => {\n  return fetchDataCorona(\"all\");\n};\n\nconst getAllStatus = () => {\n  return fetchDataCorona(\"countries\");\n};\n\nexport function useGlobalData() {\n  return useQuery(\"all\", getAllData);\n}\n\nexport function useStatesData() {\n  return useQuery(\"status\", getAllStatus);\n}\n","import React, { useState } from \"react\";\nimport { useStatesData } from \"../api/all-api\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport NumberFormat from \"react-number-format\";\n\nconst StateCases = ({ setCountryName }) => {\n  const [search, setSearch] = useState(\"\");\n  const { status, data, error } = useStatesData();\n\n  if (status === \"loading\") {\n    return <p>Loading...</p>;\n  }\n\n  if (status === \"error\") {\n    return (\n      <p>\n        <span>Error: {error.message}</span>\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"states-cases\">\n      <p className=\"text-white text-center header-title\">\n        Cases by Country/Continents\n      </p>\n      <Tabs>\n        <div className=\"states-list\">\n          <input\n            type=\"text\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search for country\"\n          />\n          <TabPanel>\n            {search.length === 0\n              ? data.map((d, i) => (\n                  <div\n                    key={i}\n                    className=\"state-status\"\n                    onClick={() => setCountryName(d)}\n                  >\n                    <span className=\"text-red numbers\">\n                      <NumberFormat\n                        value={d.cases}\n                        displayType=\"text\"\n                        thousandSeparator={true}\n                      />\n                    </span>\n                    <span className=\"text-white name\">{d.country}</span>\n                  </div>\n                ))\n              : data.map((d, i) => {\n                  if (d.country.toLowerCase().includes(search.toLowerCase())) {\n                    return (\n                      <div\n                        key={i}\n                        className=\"state-status\"\n                        onClick={() => setCountryName(d)}\n                      >\n                        <span className=\"text-red numbers\">\n                          <NumberFormat\n                            value={d.cases}\n                            displayType=\"text\"\n                            thousandSeparator={true}\n                          />\n                        </span>\n                        <span className=\"text-white name\">{d.country}</span>\n                      </div>\n                    );\n                  }\n                })}\n          </TabPanel>\n          <TabPanel>\n            <h2>Any content 2</h2>\n          </TabPanel>\n        </div>\n        <TabList>\n          <Tab>Countries</Tab>\n          <Tab>Continents</Tab>\n        </TabList>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default StateCases;\n","import React, { useState } from \"react\";\n\nimport Country from \"./country\";\nimport StateCases from \"./state-cases\";\n\nconst Details = () => {\n  const [countryName, setCountryName] = useState({}); // lefting up the state\n  return (\n    <div className=\"details\">\n      <StateCases setCountryName={setCountryName} />\n\n      <Country countryName={countryName} />\n    </div>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nconst InfoBox = ({ textWhite, text }) => {\n  return (\n    <div className=\"info-box\">\n      <p className=\"text-red\">\n        <NumberFormat\n          value={text}\n          displayType=\"text\"\n          thousandSeparator={true}\n        />\n      </p>\n      <p className=\"text-white\">{textWhite}</p>\n    </div>\n  );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { useGlobalData } from \"../api/all-api\";\nimport InfoBox from \"./info-box\";\n\nconst GlobalData = () => {\n  const { status, data, error } = useGlobalData();\n  if (status === \"loading\") {\n    return <p>Loading...</p>;\n  }\n\n  if (status === \"error\") {\n    return (\n      <p>\n        <span>Error: {error.message}</span>\n      </p>\n    );\n  }\n\n  console.log(data);\n\n  return (\n    <>\n      <InfoBox text={data.cases} textWhite=\"cases\" />\n      <InfoBox text={data.active} textWhite=\"active\" />\n      <InfoBox text={data.recovered} textWhite=\"recovered\" />\n      <InfoBox text={data.deaths} textWhite=\"deaths\" />\n    </>\n  );\n};\n\nexport default GlobalData;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"container\">this is logo</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport Details from \"./components/details\";\n\nimport GlobalData from \"./components/global-data-container\";\nimport Header from \"./components/header\";\n\nfunction App() {\n  return (\n    <div className=\"dashboard\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"global-data\">\n          <GlobalData />\n        </div>\n        <Details />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}